@model IEnumerable<EmployeeDto>

@* 
@{
    if (TempData.ContainsKey("Message"))
    {
        <div aria - live="polite" aria - atomic="true" class="toast-container position-fixed p-3" style="bottom: 25px; right:25px; z-index: 100;">
            <div class="toast fade show " role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto text-success">Success!!</strong>
                    <small>Just now</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    @TempData["Message"]
                </div>
            </div>
        </div>
    }
}
 *@

<h1>All Employees</h1>
<br />
<br />
<a class="btn btn-primary" asp-controller="Employee" asp-action="Create">Create Employee</a>
<br />
@* //Return Id[PK], Name, Age, Is Active, Salary , Email , Gender and EmployeeType HiringDate *@

<div class="m-2">
    <form asp-action="index" class="row offset-2" method="get">
        <div class="col-8">
            <input class="form-control" type="text" name="searchValue" placeholder="Search By Name ..." id="searchInput" oninput="search(this.value)" />
        </div>
        <div class="col-4">

            <input type="submit" class="btn btn-outline-success" value="Search" />

        </div>
    </form>

</div>

@if (Model.Any())
{
    <table class="table table-striped table-hover mt-3 ">
        <thead class="text-center">
            <tr>
                <th>@Html.DisplayNameFor(d => d.Name)</th>
                <th>@Html.DisplayNameFor(d => d.Age)</th>
                <th>@Html.DisplayNameFor(d => d.IsActive)</th>
                <th>@Html.DisplayNameFor(d => d.Salary)</th>
                <th>@Html.DisplayNameFor(d => d.Email)</th>
                <th>@Html.DisplayNameFor(d => d.Department)</th>
                <th>@Html.DisplayNameFor(d => d.EmployeeGender)</th>
                <th>@Html.DisplayNameFor(d => d.EmployeeType)</th>
                <th>@Html.DisplayNameFor(d => d.HireDate)</th>

                <th>Details </th>
                <th>Update</th>
                <th>Delete</th>
                <th>Delete With Modal</th>
            </tr>
        </thead>
        <tbody class="text-center" id="tbody">
            @foreach (var Employee in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(d => Employee.Name)</td>
                    <td>@Html.DisplayFor(d => Employee.Age)</td>
                    <td>
                        @(Employee.IsActive
                            ? (Html.Raw("<i class='fa-solid fa-check text-success'></i>"))
                            : (Html.Raw("<i class='fa-solid fa-xmark text-danger'></i>")))
                    </td>

                    <td>@Html.DisplayFor(d => Employee.Salary)</td>
                    <td>@Html.DisplayFor(d => Employee.Email)</td>
                    <td>
                        @(Employee.Department ?? "No Department")
                    </td>
                    <td>@Html.DisplayFor(d => Employee.EmployeeGender)</td>
                    <td>@Html.DisplayFor(d => Employee.EmployeeType)</td>
                    <td>@Html.DisplayFor(d => Employee.HireDate)</td>
                    <partial name="_Buttons" model=@Employee.Id.ToString()></partial>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info mt-3">
        <h2>No Employees Found !!</h2>
    </div>
}
<script>
    // let employees = @Html.Raw(Json.Serialize(Model)); 
    let employees = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));

    function search(term) {
        let cartona = ``;
        console.log(term);
        for (let i = 0; i < employees.length; i++) {
    if (!term ||((employees[i].Name || "").toLowerCase().includes(term.toLowerCase())))
    {
        console.log("Current employee:", employees[i]);
                    cartona += `
                    <tr>
                        <td>${employees[i].Name}</td>
                        <td>${employees[i].Age}</td>
                        <td>
                            ${employees[i].IsActive
                                ? "<i class='fa-solid fa-check text-success'></i>"
                                : "<i class='fa-solid fa-xmark text-danger'></i>"}
                        </td>
                        <td>${employees[i].Salary}</td>
                        <td>${employees[i].Email}</td>
                        <td>${employees[i].Department || "No Department"}</td>
                        <td>${employees[i].EmployeeGender}</td>
                        <td>${employees[i].EmployeeType}</td>
                        <td>${new Date(employees[i].HireDate).toLocaleDateString()}</td>
                        <td>
                            <a href="/Employee/Details/${employees[i].Id}" class="btn btn-success btn-sm">
                           <i class="fas fa-eye"></i>
                            Details</a>
                        </td>
                        <td>
                           <a href="/Employee/Edit/${employees[i].Id}" class="btn btn-warning btn-sm">
                           <i class="fas fa-edit"></i>Edit
                           </a>

                        </td>
                        <td>
                            <a href="/Employee/Delete/${employees[i].Id}" class="btn btn-danger btn-sm">
                                                      <i class="fas fa-trash"></i> Delete
                            </a>
                        </td>
                        <td>
                                <a href="/Employee/Delete/${employees[i].Id}" class="btn btn-danger btn-sm"> <i class="fas fa-trash"></i>
                                Delete</a>
                        </td>

                    </tr>
                `;
            }
        }
        document.getElementById('tbody').innerHTML = cartona;
    }
</script>
